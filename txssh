#!/usr/bin/bash

### txssh --- light cssh implementation using bash and tmux

## Copyright (c) 2013-2015 Zachary Elliott
##
## Authors: Zachary Elliott <contact@zell.io>
## URL: https://github.com/zellio/txssh
## Version: 0.2.0

### Commentary:

##

### License:

## All Rights Reserved

## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:

## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.

## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.

### Code:

function error
{
	echo -e "\e[1;31m>>> ERROR: $@\e[0m"
	return 1
}

function requires
{
	if ! command -v "$1" >/dev/null 2>&1; then
		error "Required program \`$1' not found in \$PATH"
		exit 1
	fi

	return 0
}

requires basename
requires ssh
requires tmux

tx__basename="$(basename "$0")"

function tx__usage
{
	cat <<EOF
Usage: $tx__basename [OPTION]... [HOST]...

Specific options:
    -a, --action HOST                Command to run in foreign shell
    -o, --options OPTIONS            String of options for ssh
    -p, --port PORT                  Default port number
    -s, --session NAME               Tmux session name ($tx__basename)
    -t, --title TITLE                Title header for tmux frames
    -u, --user USERNAME              Default foreign username

General options:
        --debug                      Turn on xtrace
    -h, --help                       Display this help message.
        --version                    Display the version number

$tx__basename home page: <https://github.com/zellio/txssh>
Report bugs to: <https://github.com/zellio/txssh>

EOF
}

function version
{
	cat <<EOF
0.2.0
EOF
}

function tx__main
{
	ARGS=$(getopt \
			   --longoptions 'action:,options:,port:,session:,title:,user:,debug,help,version' \
			   --name "$tx__basename" \
			   --options 'a:o:p:s:t:u:h' \
			   -- "$@")

	if (( $? )); then
		tx__usage
		return 1
	fi

	eval set -- "$ARGS"

	local action=
	local -a options
	local port=
	local session="$tx__basename"
	local title=
	local user=

	while :; do
		case "$1" in
			-a|--action)
				action="$2"
				shift 2
				;;
			-o|--options)
				options+=("$2")
				shift 2
				;;
			-p|--port)
				port="$2"
				shift 2
				;;
			-s|--session)
				session="$2"
				shift 2
				;;
			-t|--title)
				title="$2"
				shift 2
				;;
			-u|--user)
				user="$2"
				shift 2
				;;

			--debug)
				set -x
				shift 1
				;;
			-h|--help)
				tx__usage
				return 0
				;;
			--version)
				tx__version
				return 0
				;;

			--)
				shift 1
				break
				;;
		esac
	done

	if tmux has-session -t "$session_name" 2>/dev/null; then
		error "Session \`$session' already exists"
		return 1
	fi

	local -a hosts
	hosts=("$@")

	if [ "${#hosts[@]}" -eq 0 ]; then
		error "No hosts provided"
		return 1
	fi

	local ssh_cmd="$(command -v ssh)"

	if [ -n "$user" ]; then
		ssh_cmd+=" -l $user"
	fi

	if [ -n "$port" ]; then
		ssh_cmd+=" -p $port"
	fi

	if [ "${#options[@]}" -ne 0 ]; then
		ssh_cmd+="$(printf -- " -o %s" "${options[@]}")"
	fi

	tmux new-session -d -s "$session"
	for host in "${hosts[@]}"; do
		tmux split-window -t "$session" "$ssh_cmd $host $action"
	done

	local window="$(tmux lsw -t "$session" | cut -d: -f1)"
	local pane="$(tmux lsp -t "$session:$window" | head -n1 | cut -d: -f1)"

	tmux kill-pane -t "$session:$window.$pane"

	tmux set-window-option -t "$session" synchronize-panes on
	tmux select-layout -t "$session" tiled
	tmux attach-session -t "$session"

	return 0
}

tx__main "$@"

exit $?

### end of txssh
